* the serialization runtime associates a version no. with each serializable class called SerialVersionUID

* it is used during deserialization to verify that sender and receiver of a serialized object have loaded classes for that object which are compatible w.r.t. serialization.

* if the receiver has loaded a class for the object that has different UID than that of corresponding sender's class, the deserialization will result in InvalidClassException

* a serializable class can declare its own UID explicitly by declaring a field name. It must be static, final and long.

* if a serializable class doesn't explicitly declare a serialVersionUID, then the serialization runtime will calculate a default one for that class based on various aspects of class as described in Java Object Serialization Specification

* use private modifier for UID since it is not useful as inherited member